.data
str_0: .asciiz "\n"
.text
j main

foo:
move $fp, $sp
subu $sp, $sp, 20
lw $t0, -20($fp)
addu $t0, $t0, 1
move $v0, $t0
# switch basic block. store back vars that are used---------------
sw $t0, -20($fp)
sw $a0, -20($fp)
sw $a1, -20($fp)
sw $a2, -20($fp)
sw $a3, -20($fp)
# vars store back done!---------------
j foo_ret_
# switch basic block. store back vars that are used---------------
# vars store back done!---------------
# switch basic block. store back vars that are used---------------
# vars store back done!---------------

foo_ret_:
jr $ra

main:
move $fp, $sp
subu $sp, $sp, 4
subu $sp, $sp, 4
sw $fp, ($sp)
li $a0, 1
li $a1, 2
li $a2, 3
li $a3, 4
li $v0, 5
sw $v0, -20($sp)
jal foo
move $sp, $fp
lw $fp, ($sp)
addu $sp, $sp, 4
move $t0, $v0
move $a0, $t0
li $v0, 1
syscall

la $a0, str_0
li $v0, 4
syscall

# switch basic block. store back vars that are used---------------
sw $t0, -4($fp)
# vars store back done!---------------
j main_ret_
# switch basic block. store back vars that are used---------------
# vars store back done!---------------
# switch basic block. store back vars that are used---------------
# vars store back done!---------------

main_ret_:
li $v0, 10
syscall

