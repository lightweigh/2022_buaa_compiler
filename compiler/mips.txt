.data
singleVarDecl: .word -10
singleVarDecl_0: .word 23
singleVarDecl_1: .word 10
singleVarDecl_2: .word 0
str_3: .asciiz " "
str_1: .asciiz "\n"
str_2: .asciiz "19373479\n"
str_0: .asciiz "print int : "
.text
j main

funcDef_void:
move $fp, $sp
# switch basic block. store back vars that are used---------------
# vars store back done!---------------

funcDef_void_ret_:
jr $ra

funcDef_0:
move $fp, $sp
mul $t0, $a0, 10
move $t1, $t0
move $v0, $t1
# switch basic block. store back vars that are used---------------
sub $sp, $sp, 4
sw $a0, -4($fp)
sub $sp, $sp, 4
sw $t0, -8($fp)
sub $sp, $sp, 4
sw $t1, -12($fp)
# vars store back done!---------------
j funcDef_0_ret_
# switch basic block. store back vars that are used---------------
# vars store back done!---------------
# switch basic block. store back vars that are used---------------
# vars store back done!---------------

funcDef_0_ret_:
add $sp, $sp, 12
jr $ra

funcDef_1:
move $fp, $sp
mul $t0, $a0, $a1
move $t1, $t0
# switch basic block. store back vars that are used---------------
sub $sp, $sp, 4
sw $a0, -4($fp)
sub $sp, $sp, 4
sw $a1, -8($fp)
sub $sp, $sp, 4
sw $t0, -12($fp)
sub $sp, $sp, 4
sw $t1, -16($fp)
# vars store back done!---------------

IF_2:
# switch basic block. store back vars that are used---------------
# vars store back done!---------------
lw $t0, -8($fp)
beq $t0, 0, ELSE_4
# switch basic block. store back vars that are used---------------
# vars store back done!---------------

IF_STMT_3:
lw $t0, -4($fp)
lw $t1, -8($fp)
div $t0, $t1
mfhi $t2
lw $t3, -16($fp)
add $t4, $t3, $t2
div $t5, $t0, $t1
# switch basic block. store back vars that are used---------------
sw $t3, -16($fp)
sw $t0, -4($fp)
sw $t1, -8($fp)
sub $sp, $sp, 4
sw $t2, -20($fp)
sub $sp, $sp, 4
sw $t4, -24($fp)
sub $sp, $sp, 4
sw $t5, -28($fp)
# vars store back done!---------------
j END_IF_5
# switch basic block. store back vars that are used---------------
# vars store back done!---------------

ELSE_4:
lw $t0, -16($fp)
lw $t1, -4($fp)
add $t2, $t0, $t1
div $t3, $t1, 2
# switch basic block. store back vars that are used---------------
sw $t0, -16($fp)
sw $t1, -4($fp)
sw $t2, -24($fp)
sw $t3, -28($fp)
# vars store back done!---------------

END_IF_5:
lw $t0, -24($fp)
lw $t1, -16($fp)
sub $t0, $t0, $t1
# switch basic block. store back vars that are used---------------
sw $t1, -16($fp)
sw $t0, -24($fp)
# vars store back done!---------------
lw $t0, -16($fp)
lw $t1, -24($fp)
add $t2, $t0, $t1
# switch basic block. store back vars that are used---------------
sw $t0, -16($fp)
sw $t1, -24($fp)
sw $t2, -20($fp)
# vars store back done!---------------
# switch basic block. store back vars that are used---------------
# vars store back done!---------------

IF_8:
# switch basic block. store back vars that are used---------------
# vars store back done!---------------
lw $t0, -16($fp)
bge $t0, 0, END_IF_10
# switch basic block. store back vars that are used---------------
# vars store back done!---------------

IF_STMT_9:
lw $t0, -16($fp)
neg $t0, $t0
# switch basic block. store back vars that are used---------------
sw $t0, -16($fp)
# vars store back done!---------------

END_IF_10:
li $t0, 1
lw $t1, -16($fp)
add $t2, $t0, $t1
lw $t0, -24($fp)
lw $t3, -28($fp)
add $t4, $t0, $t3
mul $t5, $t2, $t4
move $v0, $t5
# switch basic block. store back vars that are used---------------
sw $t1, -16($fp)
sub $sp, $sp, 4
sw $t2, -32($fp)
sw $t0, -24($fp)
sw $t3, -28($fp)
sub $sp, $sp, 4
sw $t4, -36($fp)
sub $sp, $sp, 4
sw $t5, -40($fp)
# vars store back done!---------------
j funcDef_1_ret_
# switch basic block. store back vars that are used---------------
# vars store back done!---------------
# switch basic block. store back vars that are used---------------
# vars store back done!---------------

funcDef_1_ret_:
add $sp, $sp, 40
jr $ra

printInt:
move $fp, $sp
move $t0, $a0
la $a0, str_0
li $v0, 4
syscall

move $a0, $t0
li $v0, 1
syscall

la $a0, str_1
li $v0, 4
syscall

# switch basic block. store back vars that are used---------------
sub $sp, $sp, 4
sw $t0, -4($fp)
# vars store back done!---------------
j printInt_ret_
# switch basic block. store back vars that are used---------------
# vars store back done!---------------
# switch basic block. store back vars that are used---------------
# vars store back done!---------------

printInt_ret_:
add $sp, $sp, 4
jr $ra

main:
move $fp, $sp
la $a0, str_2
li $v0, 4
syscall

li $t0, 10
li $v0, 5
syscall

move $t1, $v0
li $v0, 5
syscall

move $t2, $v0
li $v0, 5
syscall

move $t3, $v0
li $v0, 5
syscall

move $t4, $v0
# switch basic block. store back vars that are used---------------
sub $sp, $sp, 4
sw $t0, -4($fp)
sub $sp, $sp, 4
sw $t1, -8($fp)
sub $sp, $sp, 4
sw $t2, -12($fp)
sub $sp, $sp, 4
sw $t3, -16($fp)
sub $sp, $sp, 4
sw $t4, -20($fp)
# vars store back done!---------------

IF_13:
# switch basic block. store back vars that are used---------------
# vars store back done!---------------
lw $t0, -8($fp)
ble $t0, 5, END_IF_15
# switch basic block. store back vars that are used---------------
# vars store back done!---------------

IF_STMT_14:
li $t0, 5
# switch basic block. store back vars that are used---------------
sw $t0, -8($fp)
# vars store back done!---------------

END_IF_15:
# switch basic block. store back vars that are used---------------
# vars store back done!---------------

LOOP_16:
# switch basic block. store back vars that are used---------------
# vars store back done!---------------
lw $t0, -4($fp)
beqz $t0, LOOP_END_18
# switch basic block. store back vars that are used---------------
# vars store back done!---------------

WHILE_STMT_17:
lw $t0, -4($fp)
sub $t0, $t0, 1
# switch basic block. store back vars that are used---------------
sw $t0, -4($fp)
# vars store back done!---------------

IF_19:
# switch basic block. store back vars that are used---------------
# vars store back done!---------------
lw $t0, -12($fp)
lw $t1, -4($fp)
blt $t0, $t1, END_IF_21
# switch basic block. store back vars that are used---------------
# vars store back done!---------------

IF_STMT_20:
lw $t0, -4($fp)
add $t1, $t0, 1
lw $t2, -12($fp)
div $t3, $t2, $t1
add $t2, $t3, $t0
# switch basic block. store back vars that are used---------------
sw $t0, -4($fp)
sub $sp, $sp, 4
sw $t1, -24($fp)
sub $sp, $sp, 4
sw $t3, -28($fp)
sw $t2, -12($fp)
# vars store back done!---------------

END_IF_21:
# switch basic block. store back vars that are used---------------
# vars store back done!---------------

IF_22:
# switch basic block. store back vars that are used---------------
# vars store back done!---------------
lw $t0, -16($fp)
lw $t1, -4($fp)
bgt $t0, $t1, ELSE_24
# switch basic block. store back vars that are used---------------
# vars store back done!---------------

IF_STMT_23:
lw $t0, -16($fp)
lw $t1, -4($fp)
mul $t0, $t0, $t1
# switch basic block. store back vars that are used---------------
sw $t1, -4($fp)
sw $t0, -16($fp)
# vars store back done!---------------
j END_IF_25
# switch basic block. store back vars that are used---------------
# vars store back done!---------------

ELSE_24:
lw $t0, -4($fp)
add $t1, $t0, 3
lw $t2, -16($fp)
div $t2, $t1
mfhi $t2
# switch basic block. store back vars that are used---------------
sw $t0, -4($fp)
sw $t1, -24($fp)
sw $t2, -16($fp)
# vars store back done!---------------

END_IF_25:
# switch basic block. store back vars that are used---------------
# vars store back done!---------------

LOOP_26:
# switch basic block. store back vars that are used---------------
# vars store back done!---------------
lw $t0, -20($fp)
lw $t1, -16($fp)
bge $t0, $t1, LOOP_END_28
# switch basic block. store back vars that are used---------------
# vars store back done!---------------

WHILE_STMT_27:
lw $t0, -20($fp)
lw $t1, -4($fp)
add $t0, $t0, $t1
# switch basic block. store back vars that are used---------------
sw $t1, -4($fp)
sw $t0, -20($fp)
# vars store back done!---------------

IF_29:
# switch basic block. store back vars that are used---------------
# vars store back done!---------------
lw $t0, -20($fp)
lw $t1, -8($fp)
bne $t0, $t1, END_IF_31
# switch basic block. store back vars that are used---------------
# vars store back done!---------------

IF_STMT_30:
# switch basic block. store back vars that are used---------------
# vars store back done!---------------
j LOOP_END_28
# switch basic block. store back vars that are used---------------
# vars store back done!---------------

END_IF_31:
# switch basic block. store back vars that are used---------------
# vars store back done!---------------

IF_33:
# switch basic block. store back vars that are used---------------
# vars store back done!---------------
lw $t0, -20($fp)
lw $t1, -12($fp)
beq $t0, $t1, END_IF_35
# switch basic block. store back vars that are used---------------
# vars store back done!---------------

IF_STMT_34:
lw $t0, -12($fp)
lw $t1, -20($fp)
add $t1, $t0, $t1
# switch basic block. store back vars that are used---------------
sw $t0, -12($fp)
sw $t1, -20($fp)
# vars store back done!---------------
j LOOP_26
# switch basic block. store back vars that are used---------------
# vars store back done!---------------

END_IF_35:
# switch basic block. store back vars that are used---------------
# vars store back done!---------------
j LOOP_26
# switch basic block. store back vars that are used---------------
# vars store back done!---------------

LOOP_END_28:
# switch basic block. store back vars that are used---------------
# vars store back done!---------------
j LOOP_16
# switch basic block. store back vars that are used---------------
# vars store back done!---------------

LOOP_END_18:
# switch basic block. store back vars that are used---------------
# vars store back done!---------------

IF_37:
# switch basic block. store back vars that are used---------------
# vars store back done!---------------
lw $t0, -4($fp)
bne $t0, 0, END_IF_39
# switch basic block. store back vars that are used---------------
# vars store back done!---------------

IF_STMT_38:
sub $sp, $sp, 4
sw $fp, ($sp)
lw $t1, -4($fp)
move $a0, $t1
jal printInt
move $sp, $fp
lw $fp, ($sp)
add $sp, $sp, 4
# switch basic block. store back vars that are used---------------
# vars store back done!---------------

END_IF_39:
sub $sp, $sp, 4
sw $fp, ($sp)
lw $t1, -8($fp)
move $a0, $t1
jal printInt
move $sp, $fp
lw $fp, ($sp)
add $sp, $sp, 4
sub $sp, $sp, 4
sw $fp, ($sp)
lw $t1, -12($fp)
move $a0, $t1
jal printInt
move $sp, $fp
lw $fp, ($sp)
add $sp, $sp, 4
sub $sp, $sp, 4
sw $fp, ($sp)
lw $t1, -16($fp)
move $a0, $t1
jal printInt
move $sp, $fp
lw $fp, ($sp)
add $sp, $sp, 4
sub $sp, $sp, 4
sw $fp, ($sp)
lw $t1, -20($fp)
move $a0, $t1
jal printInt
move $sp, $fp
lw $fp, ($sp)
add $sp, $sp, 4
sub $sp, $sp, 4
sw $fp, ($sp)
lw $t1, -20($fp)
move $a0, $t1
lw $t1, -16($fp)
move $a1, $t1
jal funcDef_1
move $sp, $fp
lw $fp, ($sp)
add $sp, $sp, 4
move $t0, $v0
sub $sp, $sp, 4
sw $fp, ($sp)
sub $sp, $sp, 4
sw $t0, ($sp)
lw $t1, -12($fp)
move $a0, $t1
jal funcDef_0
move $sp, $fp
lw $t0, ($sp)
add $sp, $sp, 4
lw $fp, ($sp)
add $sp, $sp, 4
sub $sp, $sp, 4
sw $fp, ($sp)
sub $sp, $sp, 4
sw $t0, ($sp)
move $a0, $t0
move $a1, $v0
jal funcDef_1
move $sp, $fp
lw $t0, ($sp)
add $sp, $sp, 4
lw $fp, ($sp)
add $sp, $sp, 4
move $t1, $v0
sub $sp, $sp, 4
sw $fp, ($sp)
sub $sp, $sp, 8
sw $t0, ($sp)
sw $t1, 4($sp)
jal funcDef_void
move $sp, $fp
lw $t0, ($sp)
lw $t1, 4($sp)
add $sp, $sp, 8
lw $fp, ($sp)
add $sp, $sp, 4
sub $sp, $sp, 4
sw $fp, ($sp)
sub $sp, $sp, 8
sw $t0, ($sp)
sw $t1, 4($sp)
move $a0, $t0
jal printInt
move $sp, $fp
lw $t0, ($sp)
lw $t1, 4($sp)
add $sp, $sp, 8
lw $fp, ($sp)
add $sp, $sp, 4
sub $sp, $sp, 4
sw $fp, ($sp)
sub $sp, $sp, 8
sw $t0, ($sp)
sw $t1, 4($sp)
move $a0, $t1
jal printInt
move $sp, $fp
lw $t0, ($sp)
lw $t1, 4($sp)
add $sp, $sp, 8
lw $fp, ($sp)
add $sp, $sp, 4
lw $t2, singleVarDecl
move $a0, $t2
li $v0, 1
syscall

la $a0, str_3
li $v0, 4
syscall

lw $t3, singleVarDecl_2
move $a0, $t3
li $v0, 1
syscall

la $a0, str_3
li $v0, 4
syscall

li $a0, 13
li $v0, 1
syscall

la $a0, str_3
li $v0, 4
syscall

li $a0, 3
li $v0, 1
syscall

la $a0, str_1
li $v0, 4
syscall

sw $t2, singleVarDecl
sw $t3, singleVarDecl_2
sub $sp, $sp, 4
sw $fp, ($sp)
sub $sp, $sp, 8
sw $t0, ($sp)
sw $t1, 4($sp)
lw $t2, singleVarDecl
move $a0, $t2
lw $t2, singleVarDecl_2
move $a1, $t2
jal funcDef_1
move $sp, $fp
lw $t0, ($sp)
lw $t1, 4($sp)
add $sp, $sp, 8
lw $fp, ($sp)
add $sp, $sp, 4
sub $sp, $sp, 4
sw $fp, ($sp)
sub $sp, $sp, 8
sw $t0, ($sp)
sw $t1, 4($sp)
li $a0, 13
li $a1, 3
jal funcDef_1
move $sp, $fp
lw $t0, ($sp)
lw $t1, 4($sp)
add $sp, $sp, 8
lw $fp, ($sp)
add $sp, $sp, 4
sub $sp, $sp, 4
sw $fp, ($sp)
sub $sp, $sp, 8
sw $t0, ($sp)
sw $t1, 4($sp)
move $a0, $v0
move $a1, $v0
jal funcDef_1
move $sp, $fp
lw $t0, ($sp)
lw $t1, 4($sp)
add $sp, $sp, 8
lw $fp, ($sp)
add $sp, $sp, 4
move $t2, $v0
sw $t2, singleVarDecl_2
sub $sp, $sp, 4
sw $fp, ($sp)
sub $sp, $sp, 8
sw $t0, ($sp)
sw $t1, 4($sp)
lw $t2, singleVarDecl_2
move $a0, $t2
jal printInt
move $sp, $fp
lw $t0, ($sp)
lw $t1, 4($sp)
add $sp, $sp, 8
lw $fp, ($sp)
add $sp, $sp, 4
# switch basic block. store back vars that are used---------------
sub $sp, $sp, 4
sw $t0, -32($fp)
sub $sp, $sp, 4
sw $t1, -36($fp)
# vars store back done!---------------
j main_ret_
# switch basic block. store back vars that are used---------------
# vars store back done!---------------
# switch basic block. store back vars that are used---------------
# vars store back done!---------------

main_ret_:
li $v0, 10
syscall

