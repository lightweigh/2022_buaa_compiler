.data
a: .space 40
str_1: .asciiz "\n"
str_0: .asciiz ", "
.text
li $v0, 0
sw $v0, a
li $v0, 1
sw $v0, a + 4
li $v0, 2
sw $v0, a + 8
li $v0, 3
sw $v0, a + 12
li $v0, 4
sw $v0, a + 16
li $v0, 5
sw $v0, a + 20
li $v0, 6
sw $v0, a + 24
li $v0, 7
sw $v0, a + 28
li $v0, 8
sw $v0, a + 32
li $v0, 9
sw $v0, a + 36
j main

fib:
move $fp, $sp
sub $sp, $sp, 4
sub $sp, $sp, 4
sw $ra, ($sp)
sub $sp, $sp, 20
# switch basic block. store back vars that are used---------------
sw $a0, -4($fp)
# vars store back done!---------------

IF_1:
lw $t0, -4($fp)
# switch basic block. store back vars that are used---------------
sw $t0, -4($fp)
# vars store back done!---------------
bne $t0, 1, END_IF_3
# switch basic block. store back vars that are used---------------
# vars store back done!---------------

IF_STMT_2:
li $v0, 1
# switch basic block. store back vars that are used---------------
# vars store back done!---------------
j fib_ret_
# switch basic block. store back vars that are used---------------
# vars store back done!---------------
# switch basic block. store back vars that are used---------------
# vars store back done!---------------

END_IF_3:
# switch basic block. store back vars that are used---------------
# vars store back done!---------------

IF_5:
lw $t0, -4($fp)
# switch basic block. store back vars that are used---------------
sw $t0, -4($fp)
# vars store back done!---------------
bne $t0, 2, END_IF_7
# switch basic block. store back vars that are used---------------
# vars store back done!---------------

IF_STMT_6:
li $v0, 2
# switch basic block. store back vars that are used---------------
# vars store back done!---------------
j fib_ret_
# switch basic block. store back vars that are used---------------
# vars store back done!---------------
# switch basic block. store back vars that are used---------------
# vars store back done!---------------

END_IF_7:
lw $t0, -4($fp)
li $t1, 1
subu $t2, $t0, $t1
sub $sp, $sp, 8
sw $t0, ($sp)
sw $t2, 4($sp)
sub $sp, $sp, 4
sw $fp, ($sp)
move $a0, $t2
sw $t2, -4($sp)
jal fib
move $sp, $fp
lw $fp, ($sp)
add $sp, $sp, 4
lw $t0, ($sp)
lw $t2, 4($sp)
add $sp, $sp, 8
move $t1, $v0
li $t3, 2
subu $t4, $t0, $t3
sub $sp, $sp, 16
sw $t0, ($sp)
sw $t1, 4($sp)
sw $t2, 8($sp)
sw $t4, 12($sp)
sub $sp, $sp, 4
sw $fp, ($sp)
move $a0, $t4
sw $t4, -4($sp)
jal fib
move $sp, $fp
lw $fp, ($sp)
add $sp, $sp, 4
lw $t0, ($sp)
lw $t1, 4($sp)
lw $t2, 8($sp)
lw $t4, 12($sp)
add $sp, $sp, 16
move $t3, $v0
addu $t5, $t1, $t3
move $v0, $t5
# switch basic block. store back vars that are used---------------
sw $t0, -4($fp)
# vars store back done!---------------
j fib_ret_
# switch basic block. store back vars that are used---------------
# vars store back done!---------------
# switch basic block. store back vars that are used---------------
# vars store back done!---------------

fib_ret_:
lw $ra, -8($fp)
jr $ra

main:
move $fp, $sp
sub $sp, $sp, 192
li $t0, 2
li $t1, 5
li $v0, 5
syscall

move $t0, $v0
li $v0, 5
syscall

move $t1, $v0
mul $t2, $t0, $t1
neg $t3, $t2
sub $sp, $sp, 16
sw $t0, ($sp)
sw $t1, 4($sp)
sw $t2, 8($sp)
sw $t3, 12($sp)
sub $sp, $sp, 4
sw $fp, ($sp)
li $a0, 4
sw $a0, -4($sp)
jal fib
move $sp, $fp
lw $fp, ($sp)
add $sp, $sp, 4
lw $t0, ($sp)
lw $t1, 4($sp)
lw $t2, 8($sp)
lw $t3, 12($sp)
add $sp, $sp, 16
move $t4, $v0
mul $t5, $t3, $t4
li $t6, 0
addu $t7, $t5, $t6
# #t12@1 = a[1]---------------------
lw $t6, a+ 4
# finish arrayload-------------------------
move $t9, $t6
addu $t8, $t7, $t9
li $v1, 0
subu $a0, $t8, $v1
li $v1, 5
mul $t0, $a0, $v1
sw $a0, -44($fp)
sub $sp, $sp, 40
sw $t0, ($sp)
sw $t1, 4($sp)
sw $t2, 8($sp)
sw $t3, 12($sp)
sw $t4, 16($sp)
sw $t5, 20($sp)
sw $t6, 24($sp)
sw $t7, 28($sp)
sw $t8, 32($sp)
sw $t9, 36($sp)
sub $sp, $sp, 4
sw $fp, ($sp)
li $a0, 5
sw $a0, -4($sp)
jal fib
move $sp, $fp
lw $fp, ($sp)
add $sp, $sp, 4
lw $t0, ($sp)
lw $t1, 4($sp)
lw $t2, 8($sp)
lw $t3, 12($sp)
lw $t4, 16($sp)
lw $t5, 20($sp)
lw $t6, 24($sp)
lw $t7, 28($sp)
lw $t8, 32($sp)
lw $t9, 36($sp)
add $sp, $sp, 40
move $v1, $v0
li $a0, 2
addu $a1, $v1, $a0
sw $a1, -52($fp)
sub $sp, $sp, 44
sw $t0, ($sp)
sw $t1, 4($sp)
sw $t2, 8($sp)
sw $t3, 12($sp)
sw $t4, 16($sp)
sw $t5, 20($sp)
sw $t6, 24($sp)
sw $t7, 28($sp)
sw $t8, 32($sp)
sw $t9, 36($sp)
sw $v1, 40($sp)
sub $sp, $sp, 4
sw $fp, ($sp)
lw $at, -52($fp)
move $a0, $at
sw $at, -4($sp)
jal fib
move $sp, $fp
lw $fp, ($sp)
add $sp, $sp, 4
lw $t0, ($sp)
lw $t1, 4($sp)
lw $t2, 8($sp)
lw $t3, 12($sp)
lw $t4, 16($sp)
lw $t5, 20($sp)
lw $t6, 24($sp)
lw $t7, 28($sp)
lw $t8, 32($sp)
lw $t9, 36($sp)
lw $v1, 40($sp)
add $sp, $sp, 44
move $a0, $v0
li $a1, 1197
subu $a2, $a1, $a0
li $a3, -10091
addu $t1, $a2, $a3
li $a3, -6
# switch basic block. store back vars that are used---------------
sw $t0, -4($fp)
sw $t1, -8($fp)
sw $a3, -68($fp)
# vars store back done!---------------

LOOP_10:
lw $t0, -4($fp)
# switch basic block. store back vars that are used---------------
sw $t0, -4($fp)
# vars store back done!---------------
bgt $t0, 100, LOOP_END_12
# switch basic block. store back vars that are used---------------
# vars store back done!---------------

WHILE_STMT_11:
# #t24@2 = a[0]---------------------
lw $t0, a
# finish arrayload-------------------------
lw $t1, -68($fp)
mul $a3, $t1, $t1
addu $s0, $t0, $a3
sw $s0, a
# #t27@2 = a[1]---------------------
lw $s1, a+ 4
# finish arrayload-------------------------
mul $s2, $t1, $t1
addu $s3, $s1, $s2
sw $s3, a + 4
# #t30@2 = a[2]---------------------
lw $s4, a+ 8
# finish arrayload-------------------------
mul $s5, $t1, $t1
addu $s6, $s4, $s5
sw $s6, a + 8
# #t33@2 = a[3]---------------------
lw $s7, a+ 12
# finish arrayload-------------------------
sw $t0, -72($fp)
mul $t0, $t1, $t1
sw $t1, -68($fp)
addu $t1, $s7, $t0
sw $t1, a + 12
# #t36@2 = a[4]---------------------
sw $t2, -12($fp)
lw $t2, a+ 16
# finish arrayload-------------------------
sw $t3, -16($fp)
lw $t3, -68($fp)
sw $t4, -20($fp)
mul $t4, $t3, $t3
sw $t5, -24($fp)
addu $t5, $t2, $t4
sw $t5, a + 16
# #t39@2 = a[5]---------------------
sw $t6, -32($fp)
lw $t6, a+ 20
# finish arrayload-------------------------
sw $t7, -28($fp)
mul $t7, $t3, $t3
sw $t8, -40($fp)
addu $t8, $t6, $t7
sw $t8, a + 20
# #t42@2 = a[6]---------------------
sw $t9, -36($fp)
lw $t9, a+ 24
# finish arrayload-------------------------
sw $v1, -48($fp)
mul $v1, $t3, $t3
sw $a0, -56($fp)
addu $a0, $t9, $v1
sw $a0, a + 24
# #t45@2 = a[7]---------------------
sw $a1, -60($fp)
lw $a1, a+ 28
# finish arrayload-------------------------
sw $a2, -64($fp)
mul $a2, $t3, $t3
sw $a3, -76($fp)
addu $a3, $a1, $a2
sw $a3, a + 28
# #t48@2 = a[8]---------------------
sw $s0, -80($fp)
lw $s0, a+ 32
# finish arrayload-------------------------
sw $s1, -84($fp)
mul $s1, $t3, $t3
sw $s2, -88($fp)
addu $s2, $s0, $s1
sw $s2, a + 32
# #t51@2 = a[9]---------------------
sw $s3, -92($fp)
lw $s3, a+ 36
# finish arrayload-------------------------
sw $s4, -96($fp)
mul $s4, $t3, $t3
sw $s5, -100($fp)
addu $s5, $s3, $s4
sw $s5, a + 36
sw $s6, -104($fp)
lw $s6, -4($fp)
sw $s7, -108($fp)
li $s7, 1
addu $s6, $s6, $s7
# switch basic block. store back vars that are used---------------
sw $t3, -68($fp)
sw $s6, -4($fp)
# vars store back done!---------------
j LOOP_10
# switch basic block. store back vars that are used---------------
# vars store back done!---------------

LOOP_END_12:
li $t3, 0
# switch basic block. store back vars that are used---------------
sw $t3, -4($fp)
# vars store back done!---------------

LOOP_13:
lw $t3, -4($fp)
# switch basic block. store back vars that are used---------------
sw $t3, -4($fp)
# vars store back done!---------------
bge $t3, 10, LOOP_END_15
# switch basic block. store back vars that are used---------------
# vars store back done!---------------

WHILE_STMT_14:
# #t56@2 = a[i@1]---------------------
lw $t3, -4($fp)
sll $s6, $t3, 2
lw $s7, a($s6)
# finish arrayload-------------------------
sw $a0, -152($fp)
move $a0, $s7
li $v0, 1
syscall

la $a0, str_0
li $v0, 4
syscall

li $a0, 1
addu $t3, $t3, $a0
# switch basic block. store back vars that are used---------------
sw $t3, -4($fp)
# vars store back done!---------------
j LOOP_13
# switch basic block. store back vars that are used---------------
# vars store back done!---------------

LOOP_END_15:
la $a0, str_1
li $v0, 4
syscall

lw $a0, -4($fp)
li $v0, 1
syscall

la $a0, str_0
li $v0, 4
syscall

lw $a0, -8($fp)
li $v0, 1
syscall

la $a0, str_0
li $v0, 4
syscall

lw $a0, -68($fp)
li $v0, 1
syscall

la $a0, str_1
li $v0, 4
syscall

# switch basic block. store back vars that are used---------------
# vars store back done!---------------
j main_ret_
# switch basic block. store back vars that are used---------------
# vars store back done!---------------
# switch basic block. store back vars that are used---------------
# vars store back done!---------------

main_ret_:
li $v0, 10
syscall

